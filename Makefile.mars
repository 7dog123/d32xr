ifdef $(GENDEV)
ROOTDIR = $(GENDEV)
else
ROOTDIR = /opt/toolchains/sega
endif

MDLD = $(ROOTDIR)/m68k-elf/bin/m68k-elf-ld
MDAS = $(ROOTDIR)/m68k-elf/bin/m68k-elf-as
SHLD = $(ROOTDIR)/sh-elf/bin/sh-elf-ld
SHCC = $(ROOTDIR)/sh-elf/bin/sh-elf-gcc
SHAS = $(ROOTDIR)/sh-elf/bin/sh-elf-as
SHOBJC = $(ROOTDIR)/sh-elf/bin/sh-elf-objcopy
RM = rm -f

CCFLAGS = -m2 -mb -g -O3 -Wall -c -fomit-frame-pointer -DMARS
HWCCFLAGS = -m2 -mb -O1 -Wall -c -fomit-frame-pointer
LINKFLAGS = -T $(ROOTDIR)/ldscripts/mars.ld -Wl,-Map=output.map -nostdlib

INCS = -I. -I$(ROOTDIR)/sh-elf/include -I$(ROOTDIR)/sh-elf/sh-elf/include

LIBS = -L$(ROOTDIR)/sh-elf/sh-elf/lib -L$(ROOTDIR)/sh-elf/lib/gcc/sh-elf/9.1.0 -lc -lgcc -lgcc-Os-4-200 -lnosys

OBJS = sh2_crt0.o f_main.o in_main.o am_main.o st_main.o m_main.o o_main.o comnjag.o vsprintf.o d_main.o g_game.o info.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_setup.o p_spec.o p_switch.o p_telept.o p_tick.o p_base.o p_user.o p_sight.o p_shoot.o p_move.o p_change.o p_slide.o r_main.o r_data.o r_phase1.o r_phase2.o r_phase3.o r_phase4.o r_phase5.o r_phase6.o r_phase7.o r_phase8.o r_phase9.c s_sound.o sounds.o sprinfo.o tables.o w_wad.o z_zone.o marsonly.o marsnew.o wadbase.o comnnew.o


all: m68k_crt0.bin m68k_crt1.bin Doom32X.bin

Doom32X.bin: Doom32X.elf
	$(SHOBJC) -O binary $< temp.bin
	dd if=temp.bin of=$@ bs=64K conv=sync

Doom32X.elf: $(OBJS)
	$(SHCC) $(LINKFLAGS) $(OBJS) $(LIBS) -o Doom32X.elf

m68k_crt0.bin: m68k_crt0.s
	$(MDAS) -m68000 --register-prefix-optional -o m68k_crt0.o m68k_crt0.s
	$(MDLD) -T $(ROOTDIR)/ldscripts/md.ld --oformat binary -o m68k_crt0.bin m68k_crt0.o

m68k_crt1.bin: m68k_crt1.s
	$(MDAS) -m68000 --register-prefix-optional -o m68k_crt1.o m68k_crt1.s
	$(MDLD) -T $(ROOTDIR)/ldscripts/md.ld --oformat binary -o m68k_crt1.bin m68k_crt1.o

%.o: %.c
	$(SHCC) $(CCFLAGS) $< -o $@

%.o: %.s
	$(SHAS) --small -o $@ $<

clean:
	$(RM) *.o *.bin *.elf *.map
